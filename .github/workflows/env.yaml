name: Environment Variables ## Defining Environment Variables , using default ones encrytpting secrets and github tokens.
on :
    push:
      branches:
          - develop
env:
    WF_ENV: ${{secrets.WF_ENV}}

jobs:
  log_env:
      runs-on: ubuntu-latest
      env:
          job_env: Available to all steps within log_env
      steps:
        - name: Global EnvironmentVariable
          env: 
              Step_env: Available to only Global EnvironmentVarible step
          run: |
              echo "Global_Env: ${WF_ENV}"
              echo "Job_Env: ${job_env}"
              echo  "Step_Env: ${Step_env}"
        - name: EnvironmentVariable2
          run: | # No value for step_env as it is a step environment variable
              echo "Global_Env: ${WF_ENV}" 
              echo "Job_Env: ${job_env}"
              echo  "Step_Env: ${Step_env}"
  log_env2:
      runs-on: ubuntu-latest
      steps: 
          - name: Predefined Environment Variables in github
            run: |
                echo "HOME: ${HOME}"
                echo "Github_Workflow: ${GITHUB_WORKFLOW}"
                echo "Github_event: ${GITHUB_EVENT_NAME}"
                echo "Github_SHA: ${GITHUB_SHA}"
                echo "Github_ref: ${GITHUB_REF}"
                echo "Global_Env: ${WF_ENV}" 
                echo "Job_Env: ${job_env}"
                echo  "Step_Env: ${Step_env}"
          - name: Fetching github repository inside git workflow
            run: |
              pwd
              git init 
              git remote add origin "https://$GITHUB_ACTOR:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY.git"
              git config --global user.email "bot@bot.com"
              git config --global user.name "automatic-bot"
              git fetch
              git checkout master
              git branch --set-upstream-to=origin/master
              git pull
              echo "Automatic File Creation" >> random.txt
              echo $RANDOM >> random.txt
              git add .
              git commit -m "Automatic Commit"
              git push 
              ls -a 

  create_commit: ## Using github_token to access github api and send request to post an issue on commit
    runs-on: ubuntu-latest 
    permissions:
      issues: write ### Github token permission 
    steps:
      - name: Create issue using REST API
        run: |
          curl --request POST \
          --url https://api.github.com/repos/${{ github.repository }}/issues \
          --header 'authorization: Bearer ${{ secrets.GITHUB_TOKEN }}' \
          --header 'content-type: application/json' \
          --data '{
            "title": "Automated issue for commit: ${{ github.sha }}",
            "body": "This issue was automatically created by the GitHub Action workflow **${{ github.workflow }}**. \n\n The commit hash was: _${{ github.sha }}_."
            }' \
          --fail

        

